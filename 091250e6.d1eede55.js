(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{113:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(n),p=r,b=d["".concat(c,".").concat(p)]||d[p]||m[p]||a;return n?o.a.createElement(b,s(s({ref:t},l),{},{components:n})):o.a.createElement(b,s({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),a=(n(0),n(113)),c={id:"reverse-resolution",title:"Reverse Resolution"},s={unversionedId:"reverse-resolution",id:"reverse-resolution",isDocsHomePage:!1,title:"Reverse Resolution",description:"---",source:"@site/docs/reverse-resolution.md",slug:"/reverse-resolution",permalink:"/docs/reverse-resolution",editUrl:"https://github.com/trustdomains/documentation/master/docs/reverse-resolution.md",version:"current",sidebar:"someSidebar",previous:{title:"Deployed Contract",permalink:"/docs/deployed-contract"},next:{title:"Choose Wallet",permalink:"/docs/choose-wallet"}},i=[{value:"Set Name",id:"set-name",children:[]},{value:"Get Name",id:"get-name",children:[]}],l={rightToc:i};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("hr",null),Object(a.b)("p",null,"Trust Domains integrate the reverse resolution in the resolver contract. User can bind a unique domain name with the address, so it's easy to resolver the metadata records and reverse records. "),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"One address can only configure one domain name in the default resolver contract. User can custom the resolver for their domains, but we suggest to use the default resolver to reverse resolution.")),Object(a.b)("h3",{id:"set-name"},"Set Name"),Object(a.b)("p",null,"Set the domain name point to the ",Object(a.b)("inlineCode",{parentName:"p"},"msg.sender")," address. The ",Object(a.b)("inlineCode",{parentName:"p"},"setName")," function will help to verify the ownership of token id for the domain name. So if you are the owner of the domain name, it will failure for the configuration."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const resolverInstance = new Resolver()\nconst name = 'token.cfx'\nconst tokenId = namehash.hash(name)\n\ntry {\n    // the smart contract will check the owner of the token id, \n    // if not match the `msg.sender`, it will set failure\n    await resolverInstance.setName(name, tokenId)\n} catch (e) {\n    // set name error\n}\n\n")),Object(a.b)("h3",{id:"get-name"},"Get Name"),Object(a.b)("p",null,"Get the domain name through the address, and return the domain string directly."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const resolverInstance = new Resolver()\nconst account = cfx:aaks65zn43jf4jwffcy0fyadspzh9uszpy9jdyhwdj\n\nconst name = await resolverInstance.getName(account)\nconsole.log(name)\n// token.cfx\n")),Object(a.b)("p",null,"To learn more detail about resolver, you can check the source code of ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/trustdomains/trust-domains-contracts/blob/main/contracts/Resolver.sol"}),"Resolver.sol")))}u.isMDXComponent=!0}}]);